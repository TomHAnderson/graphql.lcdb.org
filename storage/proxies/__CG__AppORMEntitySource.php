<?php

namespace DoctrineProxies\__CG__\App\ORM\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Source extends \App\ORM\Entity\Source implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'createdAt', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'enterUsername', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'circdate', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'shndiskcount', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'wavdiskcount', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'textdoc', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'comments', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'archiveIdentifier', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'updatedAt', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'mediaSize', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'mediaSizeUncompressed', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'dummyColumn', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'id', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'checksums', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'userPerformances', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'identifier', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'performance'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'createdAt', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'enterUsername', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'circdate', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'shndiskcount', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'wavdiskcount', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'textdoc', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'comments', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'archiveIdentifier', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'updatedAt', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'mediaSize', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'mediaSizeUncompressed', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'dummyColumn', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'id', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'checksums', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'userPerformances', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'identifier', '' . "\0" . 'App\\ORM\\Entity\\Source' . "\0" . 'performance'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Source $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnterUsername($enterUsername)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnterUsername', [$enterUsername]);

        return parent::setEnterUsername($enterUsername);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnterUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnterUsername', []);

        return parent::getEnterUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function setCircdate($circdate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCircdate', [$circdate]);

        return parent::setCircdate($circdate);
    }

    /**
     * {@inheritDoc}
     */
    public function getCircdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCircdate', []);

        return parent::getCircdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setShndiskcount($shndiskcount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShndiskcount', [$shndiskcount]);

        return parent::setShndiskcount($shndiskcount);
    }

    /**
     * {@inheritDoc}
     */
    public function getShndiskcount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShndiskcount', []);

        return parent::getShndiskcount();
    }

    /**
     * {@inheritDoc}
     */
    public function setWavdiskcount($wavdiskcount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWavdiskcount', [$wavdiskcount]);

        return parent::setWavdiskcount($wavdiskcount);
    }

    /**
     * {@inheritDoc}
     */
    public function getWavdiskcount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWavdiskcount', []);

        return parent::getWavdiskcount();
    }

    /**
     * {@inheritDoc}
     */
    public function setTextdoc($textdoc = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTextdoc', [$textdoc]);

        return parent::setTextdoc($textdoc);
    }

    /**
     * {@inheritDoc}
     */
    public function getTextdoc()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTextdoc', []);

        return parent::getTextdoc();
    }

    /**
     * {@inheritDoc}
     */
    public function setComments($comments)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setComments', [$comments]);

        return parent::setComments($comments);
    }

    /**
     * {@inheritDoc}
     */
    public function getComments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComments', []);

        return parent::getComments();
    }

    /**
     * {@inheritDoc}
     */
    public function setArchiveIdentifier($archiveIdentifier)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArchiveIdentifier', [$archiveIdentifier]);

        return parent::setArchiveIdentifier($archiveIdentifier);
    }

    /**
     * {@inheritDoc}
     */
    public function getArchiveIdentifier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArchiveIdentifier', []);

        return parent::getArchiveIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updatedAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setMediaSize($mediaSize = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMediaSize', [$mediaSize]);

        return parent::setMediaSize($mediaSize);
    }

    /**
     * {@inheritDoc}
     */
    public function getMediaSize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMediaSize', []);

        return parent::getMediaSize();
    }

    /**
     * {@inheritDoc}
     */
    public function setMediaSizeUncompressed($mediaSizeUncompressed = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMediaSizeUncompressed', [$mediaSizeUncompressed]);

        return parent::setMediaSizeUncompressed($mediaSizeUncompressed);
    }

    /**
     * {@inheritDoc}
     */
    public function getMediaSizeUncompressed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMediaSizeUncompressed', []);

        return parent::getMediaSizeUncompressed();
    }

    /**
     * {@inheritDoc}
     */
    public function setDummyColumn($dummyColumn = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDummyColumn', [$dummyColumn]);

        return parent::setDummyColumn($dummyColumn);
    }

    /**
     * {@inheritDoc}
     */
    public function getDummyColumn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDummyColumn', []);

        return parent::getDummyColumn();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function addChecksum(\App\ORM\Entity\Checksum $checksum)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addChecksum', [$checksum]);

        return parent::addChecksum($checksum);
    }

    /**
     * {@inheritDoc}
     */
    public function removeChecksum(\App\ORM\Entity\Checksum $checksum)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeChecksum', [$checksum]);

        return parent::removeChecksum($checksum);
    }

    /**
     * {@inheritDoc}
     */
    public function getChecksums()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChecksums', []);

        return parent::getChecksums();
    }

    /**
     * {@inheritDoc}
     */
    public function addUserPerformance(\App\ORM\Entity\UserPerformance $userPerformance)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUserPerformance', [$userPerformance]);

        return parent::addUserPerformance($userPerformance);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUserPerformance(\App\ORM\Entity\UserPerformance $userPerformance)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUserPerformance', [$userPerformance]);

        return parent::removeUserPerformance($userPerformance);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserPerformances()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserPerformances', []);

        return parent::getUserPerformances();
    }

    /**
     * {@inheritDoc}
     */
    public function addIdentifier(\App\ORM\Entity\InternetArchive\Identifier $identifier)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addIdentifier', [$identifier]);

        return parent::addIdentifier($identifier);
    }

    /**
     * {@inheritDoc}
     */
    public function removeIdentifier(\App\ORM\Entity\InternetArchive\Identifier $identifier)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeIdentifier', [$identifier]);

        return parent::removeIdentifier($identifier);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdentifier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdentifier', []);

        return parent::getIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    public function setPerformance(\App\ORM\Entity\Performance $performance)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPerformance', [$performance]);

        return parent::setPerformance($performance);
    }

    /**
     * {@inheritDoc}
     */
    public function getPerformance()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPerformance', []);

        return parent::getPerformance();
    }

}
